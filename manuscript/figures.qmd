---
title: "Figures"
format: html
---

```{r}
#| message: false
library(tidyverse)
library(patchwork)
library(yardstick)
library(gt)
library(gtExtras)
library(ggpubr)
library(ggrepel)

models <- read_csv("../data/models.csv", show_col_types = FALSE)
metrics <- read_csv("../data/metrics.csv", show_col_types = FALSE)

initial_models <- models %>% filter(mtime < '2024-04-01')
```

```{r}
metrics %>%
  inner_join(initial_models, by = "model") %>%
  filter(set == "val") %>%
  group_by(task, metric) %>%
  slice_max(value)
```
```{r}
fig_data <-  metrics %>%
  inner_join(initial_models, by = "model") %>%
  filter(metric == "loss") %>%
  mutate(arch = as_factor(arch))

fig <- fig_data %>%
  filter(value < 300) %>%
  mutate(
    arch =
      case_match(arch,
                "cnn" ~ "CNN",
                "resnet" ~ "ResNet",
                "mha" ~ "MHA",
                "resnetmha" ~ "ResNet+MHA"),
    task = case_match(task,
                      "age" ~ "Age",
                      "gender" ~ "Gender"),
    set = case_match(set,
                      "train" ~ "Training",
                      "val" ~ "Validation")
    ) %>%
  ggplot(aes(epoch, value, linetype = set)) +
    geom_line() + 
    facet_grid(task ~ arch, scales="free_y") +
    theme_bw(base_size = 14) +
    labs(y="Loss", x = "Epoch", linetype = "Data Set", title = "Training and Validation Losses by Model and Task") +
    theme(legend.position = "bottom")

ggsave("figure2.pdf", fig)
ggsave("figure2.png", fig)
fig
```




```{r}
ingest_file <- function(x) {
  read_csv(x,
           col_types = cols(
             records = col_double(),
             y_pred = col_double(),
             y = col_double()
           ))
}

all_results <- fs::dir_ls("../data/results/", recurse = 1, glob = "*.csv") %>%
  set_names() %>%
  map(ingest_file) %>%
  bind_rows(.id = "input_file") %>%
  separate_wider_delim(input_file, "/", names = c(NA,NA,NA, "model", "set")) %>%
  mutate(set = str_remove(set, ".csv") %>% str_remove("scores_"))
```

```{r}
age_models <- models %>%
  filter(model %in% initial_models$model, task == "age")

sex_models <- models %>%
  filter(model %in% initial_models$model, task == "gender")

fig <- all_results %>%
  filter(model %in% age_models$model) %>%
  group_by(model, set) %>%
  summarise(
    mae = mae_vec(y, y_pred),
    mse = (y - y_pred)^2 %>% mean(),
    rsq = rsq_vec(y, y_pred),
    .groups = "drop"
  ) %>%
  left_join(models %>% select(model, arch), by = "model") %>%
  select(arch, set, everything(), -model) %>%
  pivot_longer(c(-arch, -set)) %>%
  mutate(
    set = str_to_title(set),
    arch = case_match(arch, 
                           "cnn" ~ "CNN", 
                           "resnet" ~ "ResNet", 
                           "mha" ~ "MHA", 
                           "resnetmha" ~ "ResNet+MHA"),
    name = case_match(name,
                      "mae" ~ "`Mean Absolute Error`",
                      "mse" ~ "`Mean Squared Error`",
                      "rsq" ~ "R^2")                 
  ) %>%
  ggplot(aes(arch, value, shape=set, color=set)) + 
    geom_point() + 
    geom_text_repel(aes(label = round(value, 2))) +
    facet_wrap(~name, scales = "free_y", labeller = label_parsed) +
    scale_color_discrete(guide = NULL) + 
    theme_bw(base_size = 14) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    labs(y = "Metric Value", x = "", shape = "Data Set", title = "Age Model Performance by Metric and Task")
  
ggsave("figure3.pdf", fig)
ggsave("figure3.png", fig)
fig
```

```{r}
set.seed(42)
fig <- all_results %>%
  filter(model %in% age_models$model) %>%
  filter(y>18) %>%
  group_by(model, set) %>%
  slice_sample(n = 10000) %>%
  left_join(models %>% select(model, arch), by = "model") %>%
  mutate(
    set = str_to_title(set),
    arch = case_match(arch, 
                           "cnn" ~ "CNN", 
                           "resnet" ~ "ResNet", 
                           "mha" ~ "MHA", 
                           "resnetmha" ~ "ResNet+MHA")) %>%
  ggplot(aes(y, y_pred)) + 
    geom_jitter(size = 0.1, alpha = 0.3, width = 0.5, height = 0) +
    geom_smooth(method="lm", formula = y~x, se=FALSE) +
    stat_regline_equation(aes(label=after_stat(rr.label))) + 
    facet_grid(set ~ arch) +
    theme_bw(base_size = 14) +
    labs(y="Predicted Age", x = "True Age", title = "Predicted vs True Age by Model and Data Set")
  
ggsave("figure4.pdf", fig)
ggsave("figure4.png", fig)
fig
```


```{r}
thresholds <- all_results %>%
  filter(set == "val", model %in% sex_models$model) %>%
    mutate(y_pred = plogis(y_pred), 
         y = as_factor(y) %>% fct_relevel(c("1", "0"))) %>%
  group_by(model) %>%
  roc_curve(y, y_pred) %>%
  mutate(j_index = sensitivity + specificity - 1) %>%
  slice_max(j_index) %>%
  select(model, .threshold)


fig <- all_results %>%
  filter(model %in% sex_models$model) %>%
  mutate(y_pred = plogis(y_pred),
        y = as_factor(y) %>% fct_relevel(c("1", "0"))) %>%
  left_join(thresholds, by = "model") %>%
  mutate(
    y_pred_fact = ((y_pred > .threshold) * 1.0 ) %>% as_factor() %>% fct_relevel(c("1", "0"))
  ) %>%
  group_by(model, set) %>%
  summarise(
    AUROC = roc_auc_vec(y, y_pred),
    Brier = brier_class_vec(y, y_pred),
    ACC = accuracy_vec(y, y_pred_fact),
    F1 = f_meas_vec(y, y_pred_fact),
    Sens = sensitivity_vec(y, y_pred_fact),
    Spec = specificity_vec(y, y_pred_fact),
    .groups = "drop") %>%
  left_join(models %>% select(model, arch), by = "model") %>%
  select(arch, set, everything(), -model) %>%
  pivot_longer(c(-arch, -set)) %>%
  mutate(set = str_to_title(set),
             arch = case_match(arch, 
                           "cnn" ~ "CNN", 
                           "resnet" ~ "ResNet", 
                           "mha" ~ "MHA", 
                           "resnetmha" ~ "ResNet+MHA"),
  ) %>%
    ggplot(aes(arch, value, shape=set, color=set)) + 
      geom_point() +
      geom_text_repel(aes(label = round(value, 2))) +
      scale_color_discrete(guide=NULL) + 
      facet_wrap(~name, scales = "free_y") +
      theme_bw(base_size = 14) +
      theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "bottom") +
      labs(y = "Metric Value", x = "", shape = "Data Set", title = "Gender Model Performance by Metric and Task")

ggsave("figure5.pdf", fig)
ggsave("figure5.png", fig)
fig
```











